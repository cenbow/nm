<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="../config/ehcache.xsd" updateCheck="false">

	<diskStore path="${java.io.tmpdir}/ehcache" />

	<!-- 默认缓存 -->
	<defaultCache maxElementsInMemory="10000" eternal="false" timeToIdleSeconds="30" timeToLiveSeconds="30" overflowToDisk="false" />
	
	<!-- 配置自定义缓存 ：
			maxElementsInMemory：缓存中允许创建的最大对象数 
			eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。 
			timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前， 两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效， 如果该值是 0 就意味着元素可以停顿无穷长的时间。 
			timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
			overflowToDisk：内存不足时，是否启用磁盘缓存。 
			memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。
			  memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。 
       		clearOnFlush：内存数量最大时是否清除。 
	 -->
	

	<!-- shiro 权限管理 -->
	<cache name="authorization" maxElementsInMemory="10000" eternal="false" overflowToDisk="true" timeToIdleSeconds="900" timeToLiveSeconds="1800" memoryStoreEvictionPolicy="LFU" />
	
	<!-- timeToIdleSeconds="1800" 30 * 60 -->
	<!-- timeToLiveSeconds 3 * 60 * 60 -->
	<!-- diskSpoolBufferSizeMB 2G -->
	<cache 
		name="principalCache" 
		maxElementsInMemory="1000" 
		eternal="false" 
		overflowToDisk="true" 
		diskSpoolBufferSizeMB="2048"
		timeToIdleSeconds="1800" 
		timeToLiveSeconds="10800"  
		memoryStoreEvictionPolicy="LFU" 
	/>
	
	<!-- timeToIdleSeconds="1800" 30 * 60 -->
	<!-- timeToLiveSeconds 3 * 60 * 60 -->
	<!-- diskSpoolBufferSizeMB 2G -->
	<cache 
		name="sessionCache" 
		maxElementsInMemory="1000" 
		eternal="false" 
		overflowToDisk="true" 
		diskSpoolBufferSizeMB="2048"
		timeToIdleSeconds="1800" 
		timeToLiveSeconds="10800"  
		memoryStoreEvictionPolicy="LFU" 
	/>
	
</ehcache>