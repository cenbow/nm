<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
	">
		
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="query*" propagation="SUPPORTS" read-only="true" />
      		<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="save*" propagation="REQUIRED"/>
      		<tx:method name="del*" propagation="REQUIRED"/>
      		<tx:method name="remove*" propagation="REQUIRED"/>
      		<tx:method name="update*" propagation="REQUIRED"/>
      		<tx:method name="edit*" propagation="REQUIRED"/>
      		<tx:method name="add*" propagation="REQUIRED"/>
      		<tx:method name="apply*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Throwable"/>
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* com.nm..service.*.*(..))"/>
        <aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice"/>
    </aop:config>
    
    <!-- 事务说明 -->
    <!--  
	    PROPAGATION_REQUIRED 支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。
	    PROPAGATION_SUPPORTS 支持当前事务，如果当前没有事务，就以非事务方式执行。
	    PROPAGATION_MANDATORY 支持当前事务，如果当前没有事务，就抛出异常。
	    PROPAGATION_REQUIRES_NEW 新建事务，如果当前存在事务，把当前事务挂起。
	    PROPAGATION_NOT_SUPPORTED 以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。
	    PROPAGATION_NEVER 以非事务方式执行，如果当前存在事务，则抛出异常。
	    PROPAGATION_NESTED 如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则进行与PROPAGATION_REQUIRED类似的操作。
    -->
 
</beans>